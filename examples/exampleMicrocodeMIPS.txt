
begin,
native
{
                /*
                  if (INT)
                  {
                      # MBR <- DB <- INTV: (INTA, BW=11, M1=1, C1=1),
                      # RT1 <- MBR
                      # go int_handler
                  }
                */

                var addr  = wepsim_native_get_value("CPU", "REG_PC") ;
                var value = wepsim_native_get_value("MEMORY", addr) ;

                wepsim_native_set_value("CPU", "REG_IR", value) ;
                wepsim_native_set_value("CPU", "REG_PC", addr + 4) ;

                wepsim_native_deco() ;
                wepsim_native_go_opcode() ;
}


#
# INT
#

syscall {
            co=101110,
            nwords=1,
            native,
            {
                    wepsim_native_set_value("CPU", "REG_RT1", 2) ;
                    wepsim_native_go_instruction("int_handler") ;
            }
}

reti {
            co=111110,
            nwords=1,
            native,
            {
                // pop SR
                var reg_sp = wepsim_native_get_value("BR", 29) ;
                var value  = wepsim_native_get_value("MEMORY", reg_sp) ;
                reg_sp = reg_sp + 4 ;
                wepsim_native_set_value("CPU", "REG_SR", value) ;
                wepsim_native_set_value("BR", 29, reg_sp) ;

                // pop PC
                var reg_sp = wepsim_native_get_value("BR", 29) ;
                var value  = wepsim_native_get_value("MEMORY", reg_sp) ;
                reg_sp = reg_sp + 4 ;
                wepsim_native_set_value("CPU", "REG_PC", value) ;
                wepsim_native_set_value("BR", 29, reg_sp) ;

                wepsim_native_go_maddr(0) ;
            }
}

int_handler {
            co=111111,
            nwords=1,
            native,
            {
                // push PC
                var value  = wepsim_native_get_value("CPU", "REG_PC") ;
                var reg_sp = wepsim_native_get_value("BR", 29) ;
                reg_sp = reg_sp - 4 ;
                wepsim_native_set_value("MEMORY", reg_sp, value) ;
                wepsim_native_set_value("BR", 29, reg_sp) ;

                // push SR
                value  = wepsim_native_get_value("CPU", "REG_SR") ;
                reg_sp = wepsim_native_get_value("BR", 29) ;
                reg_sp = reg_sp - 4 ;
                wepsim_native_set_value("MEMORY", reg_sp, value) ;
                wepsim_native_set_value("BR", 29, reg_sp) ;

                // MAR <- RT1*4
                var addr = wepsim_native_get_value("CPU", "REG_RT1") ;
                addr = 4 * addr ;
                wepsim_native_set_value("CPU", "REG_MAR", addr) ;

                // MBR <- MP[MAR]
                // PC  <- MBR
                addr = wepsim_native_get_value("MEMORY", addr) ;
                wepsim_native_set_value("CPU", "REG_PC", addr) ;

                // fetch
                value = wepsim_native_get_value("MEMORY", addr) ;
                wepsim_native_set_value("CPU", "REG_IR", value) ;
                wepsim_native_set_value("CPU", "REG_PC", addr + 4) ;
                wepsim_native_deco() ;
                wepsim_native_go_opcode() ;
            }
}


#
# ALU
#

and reg1 reg2 reg3 {
            co=000000,
            cop=0000,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("and reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) & wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}


or reg1 reg2 reg3 {
            co=000000,
            cop=0001,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("or reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) | wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

not reg {
            co=000000,
            cop=0010,
            nwords=1,
            reg=reg(25,21),
            native,
            {
                var fields = wepsim_native_get_fields("not reg") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;

                var result = wepsim_native_get_value("BR", reg1) ;
                wepsim_native_set_value("BR", reg1, ~result) ;

                wepsim_native_go_maddr(0) ;
            }
}

xor reg1 reg2 reg3 {
            co=000000,
            cop=0011,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("xor reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) ^ wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

add reg1 reg2 reg3 {
            co=000000,
            cop=1001,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("add reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) + wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

sub reg1 reg2 reg3 {
            co=000000,
            cop=1010,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("sub reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) - wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

mul reg1 reg2 reg3 {
            co=000000,
            cop=1011,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("mul reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) * wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

div reg1 reg2 reg3 {
            co=000000,
            cop=1100,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("div reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                if (wepsim_native_get_value("BR", reg3) == 0)
                {
                    wepsim_native_set_value("CPU", "REG_RT1", 1) ;
                    wepsim_native_go_instruction("int_handler") ;
                }
                else
                {
                    var result = wepsim_native_get_value("BR", reg2) / wepsim_native_get_value("BR", reg3) ;
                    wepsim_native_set_value("BR", reg1, result) ;
                    wepsim_native_go_maddr(0) ;
                }
            }
}

rem reg1 reg2 reg3 {
            co=000000,
            cop=1110,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            reg3=reg(15,11),
            native,
            {
                var fields = wepsim_native_get_fields("rem reg1 reg2 reg3") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var reg3   = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) % wepsim_native_get_value("BR", reg3) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

srl reg1 reg2 val {
            co=010111,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            val=inm(5,0),
            native,
            {
                var fields = wepsim_native_get_fields("srl reg1 reg2 val") ;
                var reg1 = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2 = wepsim_native_get_field_from_ir(fields, 1) ;
                var val1 = wepsim_native_get_field_from_ir(fields, 2) ;

                var result = wepsim_native_get_value("BR", reg2) >>> val1 ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}


#
# MOVE/LI/LA
#

move reg1 reg2 {
            co=000001,
            nwords=1,
            reg1=reg(25,21),
            reg2=reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("move reg1 reg2") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var result = wepsim_native_get_value("BR", reg2) ;
                wepsim_native_set_value("BR", reg1, result) ;

                wepsim_native_go_maddr(0) ;
            }
}

li reg val {
            co=000010,
            nwords=1,
            reg=reg(25,21),
            val=inm(15,0),
            native,
            {
                var fields = wepsim_native_get_fields("li reg val") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var val1   = wepsim_native_get_field_from_ir(fields, 1) ;

                if (val1 & 0x00008000)
                    val1 = val1 | 0xFFFF0000 ;
                wepsim_native_set_value("BR", reg1, val1) ;

                wepsim_native_go_maddr(0) ;
            }
}

liu reg val {
            co=111100,
            nwords=1,
            reg=reg(25,21),
            val=inm(15,0),
            native,
            {
                var fields = wepsim_native_get_fields("liu reg1 val") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var val1   = wepsim_native_get_field_from_ir(fields, 1) ;

                wepsim_native_set_value("BR", reg1, val1) ;

                wepsim_native_go_maddr(0) ;
            }
}

la  reg addr {
            co=000011,
            nwords=1,
            reg=reg(25,21),
            addr=address(15,0)abs,
            native,
            {
                var fields = wepsim_native_get_fields("la reg addr") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var val1   = wepsim_native_get_field_from_ir(fields, 1) ;

                wepsim_native_set_value("BR", reg1, val1) ;

                wepsim_native_go_maddr(0) ;
            }
}


#
# LOAD/STORE
#

lw reg addr {
            co=000100,
            nwords=1,
            reg=reg(25,21),
            addr=address(15,0)abs,
            native,
            {
                var fields = wepsim_native_get_fields("lw reg addr") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value = wepsim_native_get_value("MEMORY", addr) ;
                wepsim_native_set_value("BR", reg1, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

sw reg addr {
            co=000101,
            nwords=1,
            reg=reg(25,21),
            addr=address(15,0)abs,
            native,
            {
                var fields = wepsim_native_get_fields("sw reg addr") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value = wepsim_native_get_value("BR", reg1) ;
                wepsim_native_set_value("MEMORY", addr, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

lb reg addr {
            co=001000,
            nwords=1,
            reg=reg(25,21),
            addr=address(15,0)abs,
            native,
            {
                var fields = wepsim_native_get_fields("lb reg addr") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value = wepsim_native_get_value("MEMORY", addr) ;
                if (value & 0x00008000)
                    value = value | 0xFFFF0000 ;
                wepsim_native_set_value("BR", reg1, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

sb reg addr {
            co=001001,
            nwords=1,
            reg=reg(25,21),
            addr=address(15,0)abs,
            native,
            {
                var fields = wepsim_native_get_fields("sb reg addr") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value1 = wepsim_native_get_value("MEMORY", addr) ;
                var value2 = wepsim_native_get_value("BR", reg1) ;
                value1 = (value1 & 0xFFFFFF00) | (value2 & 0x000000FF) ;
                wepsim_native_set_value("MEMORY", addr, value1) ;

                wepsim_native_go_maddr(0) ;
            }
}

lb reg1 (reg2) {
            co=100101,
            nwords=1,
            reg1 = reg(25,21),
            reg2 = reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("lb reg1 (reg2)") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var addr   = wepsim_native_get_value("BR", reg2) ;
                var value2 = wepsim_native_get_value("MEMORY", addr) ;
                    value2 = value2 & 0x000000FF ;
                wepsim_native_set_value("BR", reg1, value2) ;

                wepsim_native_go_maddr(0) ;
            }
}

lbu reg1 (reg2) {
            co=101111,
            nwords=1,
            reg1 = reg(25,21),
            reg2 = reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("lbu reg1 (reg2)") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var addr  = wepsim_native_get_value("BR", reg2) ;
                var value = wepsim_native_get_value("MEMORY", addr) ;
                value = value & 0x000000FF ;
                wepsim_native_set_value("BR", reg1, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

sb reg1 (reg2) {
            co=100111,
            nwords=1,
            reg1 = reg(25,21),
            reg2 = reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("sb reg1 (reg2)") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var addr   = wepsim_native_get_value("BR", reg2) ;
                var value1 = wepsim_native_get_value("MEMORY", addr) ;
                var value2 = wepsim_native_get_value("BR", reg1) ;
                value1 = (value1 & 0xFFFFFF00) | (value2 & 0x000000FF) ;
                wepsim_native_set_value("MEMORY", addr, value1) ;

                wepsim_native_go_maddr(0) ;
            }
}

lw reg1 (reg2) {
            co=111001,
            nwords=1,
            reg1 = reg(25,21),
            reg2 = reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("lw reg1 (reg2)") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var addr  = wepsim_native_get_value("BR", reg2) ;
                var value = wepsim_native_get_value("MEMORY", addr) ;
                wepsim_native_set_value("BR", reg1, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

sw reg1 (reg2) {
            co=111010,
            nwords=1,
            reg1 = reg(25,21),
            reg2 = reg(20,16),
            native,
            {
                var fields = wepsim_native_get_fields("sw reg1 (reg2)") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;

                var addr   = wepsim_native_get_value("BR", reg2) ;
                var value1 = wepsim_native_get_value("BR", reg1) ;
                wepsim_native_set_value("MEMORY", addr, value1) ;

                wepsim_native_go_maddr(0) ;
            }
}


#
# IN/OUT
#

in reg val {
            co=001010,
            nwords=1,
            reg=reg(25,21),
            val=inm(15,0),
            native,
            {
                var fields = wepsim_native_get_fields("in reg val") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value = wepsim_native_get_value("DEVICE", addr) ;
                wepsim_native_set_value("BR", reg1, value) ;

                wepsim_native_go_maddr(0) ;
            }
}

out reg val {
            co=001011,
            nwords=1,
            reg=reg(25,21),
            val=inm(15,0),
            native,
            {
                var fields = wepsim_native_get_fields("out reg val") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var addr   = wepsim_native_get_field_from_ir(fields, 1) ;

                var value = wepsim_native_get_value("BR", reg1) ;
                wepsim_native_set_value("DEVICE", addr, value) ;

                wepsim_native_go_maddr(0) ;
            }
}


#
# b*
#

b offset {
            co=001100,
            nwords=1,
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("b offset") ;
                var offset = wepsim_native_get_field_from_ir(fields, 0) ;

                var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                if ((offset & 0x8000) > 0)
                     offset = offset | 0xFFFF0000 ;
                pc = pc + offset ;
                wepsim_native_set_value("CPU", "REG_PC", pc) ;

                wepsim_native_go_maddr(0) ;
            }
}

beq reg reg offset {
            co=001101,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("beq reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 == reg2) 
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}

bne reg reg offset {
            co=001110,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("bne reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 != reg2) 
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}

bge reg reg offset {
            co=001111,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("bge reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 >= reg2) 
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}

blt reg reg offset {
            co=010000,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("blt reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 < reg2)
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}

bgt reg reg offset {
            co=010001,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("bgt reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 > reg2)
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}

ble reg reg offset {
            co=010010,
            nwords=1,
            reg=reg(25,21),
            reg=reg(20,16),
            offset=address(15,0)rel,
            native,
            {
                var fields = wepsim_native_get_fields("ble reg reg offset") ;
                var reg1   = wepsim_native_get_field_from_ir(fields, 0) ;
                var reg2   = wepsim_native_get_field_from_ir(fields, 1) ;
                var offset = wepsim_native_get_field_from_ir(fields, 2) ;

                reg1 = wepsim_native_get_value("BR", reg1) ;
                reg2 = wepsim_native_get_value("BR", reg2) ;
                if (reg1 <= reg2)
                {
                    var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                    if ((offset & 0x8000) > 0)
                         offset = offset | 0xFFFF0000 ;
                    pc = pc + offset ;
                    wepsim_native_set_value("CPU", "REG_PC", pc) ;
                }

                wepsim_native_go_maddr(0) ;
            }
}


#
# j*
#

j addr {
            co=010011,
            nwords=1,
            addr=address(15,0)abs,
            native,
            {
                var fields  = wepsim_native_get_fields("j addr") ;
                var address = wepsim_native_get_field_from_ir(fields, 0) ;

                wepsim_native_set_value("CPU", "REG_PC", address) ;

                wepsim_native_go_maddr(0) ;
            }
}

jal addr {
            co=010100,
            nwords=1,
            addr=address(15,0)abs,
            native,
            {
                var fields  = wepsim_native_get_fields("jal addr") ;
                var address = wepsim_native_get_field_from_ir(fields, 0) ;

                var pc = wepsim_native_get_value("CPU", "REG_PC") ;
                wepsim_native_set_value("BR", 31, pc) ;
                wepsim_native_set_value("CPU", "REG_PC", address) ;

                wepsim_native_go_maddr(0) ;
            }
}

jr reg1 {
            co=010101,
            nwords=1,
            reg1=reg(25,21),
            native,
            {
                var fields  = wepsim_native_get_fields("jr reg1") ;
                var reg1 = wepsim_native_get_field_from_ir(fields, 0) ;

                var new_pc = wepsim_native_get_value("BR", reg1) ;
                wepsim_native_set_value("CPU", "REG_PC", new_pc) ;

                wepsim_native_go_maddr(0) ;
            }
}


#
# Register naming
#

registers
{
        0=$zero,
        1=$at,
        2=$v0,
        3=$v1,
        4=$a0,
        5=$a1,
        6=$a2,
        7=$a3,
        8=$t0,
        9=$t1,
        10=$t2,
        11=$t3,
        12=$t4,
        13=$t5,
        14=$t6,
        15=$t7,
        16=$s0,
        17=$s1,
        18=$s2,
        19=$s3,
        20=$s4,
        21=$s5,
        22=$s6,
        23=$s7,
        24=$t8,
        25=$t9,
        26=$k0,
        27=$k1,
        28=$gp,
        29=$sp (stack_pointer),
        30=$fp,
        31=$ra
}

